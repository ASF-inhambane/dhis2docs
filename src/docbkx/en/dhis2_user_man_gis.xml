<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" []>
<chapter>
  <title>GIS</title>
  <section>
    <title>OpenHealthMapper</title>
    <para>The DHIS 2 GIS web module is inspired by the <ulink url="http://www.who.int/health_mapping/tools/healthmapper/en/">WHO HealthMapper</ulink> desktop application.</para>
  </section>
  <section>
    <title>Setting up the GIS module</title>
    <section id="gisSetup">
      <title>Importing geographical layers for orgunit thematic mapping</title>
      <para>The maps are generated off the coordinates information linked to the Organisation Units in the database. No additional files are needed. As soon as the orgunits have coordinates the maps will be available in the GIS module. Although it is possible to add/edit coordinates directly in the Edit Organisation Unit window (in Maintenance-&gt;Organisation Unit) we recommend doing this in a batch job using the general import process in  the import/export module. The import process will need a GML file with at least the  two properties; &quot;Name&quot; and &quot;coordinates&quot;.</para>
      <para>To generate the GML file start by installing the open source tool called  ogr2ogr. This should be available for most Linux distros (&quot;sudo apt-get install
gdal-bin&quot;). For Windows, get FWTools:  http://fwtools.maptools.org/</para>
      <para>The most common format for GIS data is the ESRI shapefile, which consists of three identically named files with extensions .shp, .shx and .dbf.
(You can use ogr2ogr to convert between any formats, see example below). Open the .dbf in a spreadsheet application (e.g. MS Excel). Make sure 
 there is a field (column) called &quot;Name&quot; which has orgunit names, and that these orgunits are already existing in DHIS2. Also make sure all spellings are identical since the matching is done on this name.
</para>
      <para>On Windows, open the FWTools Shell and navigate to the folder with the shapefile. Issue the following command (replace &quot;output&quot; and
&quot;input&quot; with the actual names):
    <programlisting><userinput> ogr2ogr -F GML output.gml input.shp </userinput></programlisting> 
</para>
      <para>The column in the .dbf file with the orgunit name will have been converted to an XML element inside the GML file. Open the GML file in
a text editor (e.g. Notepad++) and do a search/replace to make sure this element is called exactly ogr:Name (case sensitive), e.g.
&lt;ogr:Name&gt;Badjia&lt;/ogr:Name&gt;
</para>
      <para>Import the GML file into DHIS2 through the import process in the import/export module (under services menu). There is no need to zip the file. Change import type to &quot;preview&quot; before doing the import to see which changes that will be made and resolve any issues with orgunit name matching etc. See the import/export chapter in the manual for more details on import processes. After import the coordinates will be added to the orgunit&apos;s metadata and also be available from the orgunit edit window (Maintenance-&gt;Organisation Units).</para>
    </section>
  </section>
  <section>
    <title>Administering the GIS module</title>
    <section id="gisAdministration">
      <title>Administrator settings</title>
      <para>The administrator settings window can be opened from the map toolbar, click on the wrench symbol (tooltip says &quot;Administrator settings&quot;). Here you can define the Date Type used to select periods. Either use fixed periods corresponding to the periods used in DHIS data collection (weeks, months, quarters, 6-months, years etc.) or use the more flexible start and end dates.</para>
    </section>
    <section id="gisOverlay">
      <title>Register overlays</title>
      <para>Overlays are geographical layers that do not have any direct linkage
    to data in the database. Examples include roads, rivers, airports, ports,
    and other geographical information that you may want to display on your
    map, but that is not necessarily linked to data contained in the DHIS
    database. The <guimenu>Register Overlay</guimenu> panel will allow you to
    add new layers and determine how they will be represented visually on the
    map. </para>
      <itemizedlist>
        <listitem>
          <para><guilabel>Display name: </guilabel>Represents your overlay in
        the layer tree in the upper right corner.</para>
        </listitem>
        <listitem>
          <para><guilabel>Map source file: </guilabel>The GeoJSON file
        name.</para>
        </listitem>
        <listitem>
          <para><guilabel>Fill color: </guilabel>Decides the fill color if the
        layer is a polygon layer. </para>
        </listitem>
        <listitem>
          <para><guilabel>Fill opacity: </guilabel>Select an opacity level
        between 0 (invisible) and 1 (solid).</para>
        </listitem>
        <listitem>
          <para><guilabel>Stroke color: </guilabel>The stroke color over lines
        and polygon borders.</para>
        </listitem>
        <listitem>
          <para><guilabel>Stroke width: </guilabel>Select a stroke width between
        0 and 4.</para>
        </listitem>
      </itemizedlist>
      <section>
        <title>Copying files to the DHIS application</title>
        <para>Currently, your GeoJSON files should be placed in the
      DHIS2_HOME/geojson of your DHIS application to be accessible to the GIS
      module. If the GeoJSON directory does not exist, you will need to create
      it manually and copy your GeoJSON files there.</para>
      </section>
    </section>
  </section>
  <section>
    <title>Using the GIS module</title>
    <section id="gisThematicMap">
      <title>Thematic mapping</title>
      <para>This panel lets you use your registered maps for thematic mapping. All you need to do is selecting your desired indicator/dataelement-period-map combination in the left side menu.</para>
      <para>Calculation method
    alludes to the  size  of the legend classes. Set to <guimenuitem>Equal intervals</guimenuitem> they will be “highest map value – lowest map value
    / number of classes”. Set to <guimenuitem>Equal group count</guimenuitem> the legend creator will try to distribute the organisation units evenly. Choose <guimenuitem>Fixed bounds </guimenuitem>and
    you may define your own class break values, type e.g. “20,40,60” using a comma to
    separate each of them.</para>
      <para>The map view combo box lists all map views (favorites) saved by the user. The settings that are stored in the map view will be automatically applied to the thematic map panel.</para>
    </section>
    <section id="gisFavoriteMapView">
      <title>Register favorite map views</title>
      <para>This window will save the current thematic map view in order to
    restore it whenever you want via the <guimenuitem>map view</guimenuitem> combo box in the <guimenu>thematic map</guimenu> panel. By
    adding your views to DHIS 2 Dashboard you may access them there by
    inserting <guimenuitem>map views</guimenuitem> into one of the link
    areas.</para>
    </section>
    <section id="gisLegendSet">
      <title>Register legend sets</title>
      <para>A legend set may be connected to many indicators, but an indicator
    may only have one legend set. Thus, you may select many indicators when
    you create a legend set. When an indicator that has a legend set is
    selected in the <guimenu>thematic map</guimenu> panel, the number of
    classes, low color and high color is automatically set.</para>
      <para>Example usage (vaccination coverage): Firstly, create the legends that are going to constitute the legend set. The first one could be &quot;Low bad&quot; (display name), 0 (start value), 30 (end value), red (color). Then create &quot;Medium&quot; / 30 / 70 / yellow and finally &quot;High good&quot; / 70 / 100 / green. Now, open the &quot;legend set&quot; panel, type e.g. &quot;High is good&quot; as display name and select the desired legends below. Multi-select your three legends by pressing and holding the Ctrl/Shift button when selecting. Then click the register button to store the legend set. Assign indicators/data elements to your legend set in one of the two last panels. Select the legend set in the combo box and multi-select items in the list below. Click the assign button to update the legend set.</para>
    </section>
    <section id="gisImageExport">
      <title>Exporting/saving map images</title>
      <para>Click the image icon on the map toolbar and            the  print window will open. Title: Image title, will appear as a headline in the image. Layers: Choose whether polygons, points or both will be printed. Width/Height: The pixel resolution of the image. Choose among the predefined &quot;small&quot; (800x600), &quot;medium&quot; (1190x880), &quot;large&quot; (1920x1200) or type the exact number of pixels yourself (type the number only, avoid text like &quot;px&quot;). If you want to exclude the legend from the image, untick the legend checkbox. Finally click the export button to print the image  (PNG).</para>
    </section>
  </section>
  <section>
    <title>Background information</title>
    <section>
      <title>Identifying map data</title>
      <para>Geographical data can be divided in two basic groups - raster and vector. </para>
      <section>
        <title>Raster images</title>
        <para>Raster can be thought of as pictures such as satellite images. Images can be used as background for maps, and the OHM can pull them in from any standard compliant 
      <ulink url="http://en.wikipedia.org/wiki/Web_Map_Service">Web Map Service (WMS)</ulink>. It is also of great interest to
      combine the DHIS2 installation with a <ulink url="http://geoserver.org/display/GEOS/Welcome">GeoServer</ulink> instance, 
      which can be downloaded as a .war-file and run in the same servlet container (e.g. Tomcat, Jetty, Resin). Geoserver can provide
      both background layers such as roads, lakes etc. or also display thematic data as an alternative to the browser-rendered 
      main mode which uses GeoJSON.</para>
      </section>
      <section>
        <title>Vector data</title>
        <para>In order to create thematic maps (also known as <ulink url="http://en.wikipedia.org/wiki/Choropleth_map">choropleth maps</ulink>)
    we need to have vector polygons (e.g. for facility catchment areas or administrative regions). Also, vector files are required for 
    points (e.g. health facility locations or even different wards within a hospital). Such vector files consist of a collection of (x,y)
    coordinates with a number of associated attributes (at least a name). Vector data can come in a lot of formats, such as GPS 
    coordinates for facilities. The most common is the <ulink url="http://en.wikipedia.org/wiki/Shapefile">ESRI shapefile format</ulink>. 
    In order to make web maps interactive, DHIS 2 uses the <ulink url="http://en.wikipedia.org/wiki/GeoJSON">javascript GeoJSON format</ulink>.</para>
      </section>
      <section>
        <title>Getting data</title>
        <para>
        In order to use the OHM with DHIS2, it is necessary to have vector data for each orgunit level one wants to see in the map.
        In many countries, the Ministry of Health will have shapefiles for the health-related administrative divisions. In other cases,
        such files may have to be procured from a ministry of planning or from private vendors. Facility coordinates can easily be
        assembled into a layer (file) for facilities - and if they are not available, these can be collected by cheap GPS units (increasingly
        available also in mobile phones). Additionally, a lot of data are available freely on the web - especially bacground layers and
        overlays, but also facility positions and administrative boundaries. Below is a list of sources of such data:</para>
        <itemizedlist>
          <listitem>
            <para><ulink url="http://www.openstreetmap.org">OpenStreetMap</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://www.openhealthconsortium.org/wiki/doku.php?id=layers_from_openstreetmap">Handling the layers</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://www.maplibrary.org/stacks/africa">Maplibrary</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://www.gadm.org/country">Global Administrative Areas</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://www.unsalb.org">UN organizations, especially WHO and FAO, have administrative boundaries</ulink></para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>Projections</title>
        <para>DHIS 2 uses latitude/longitude (lat/lon) coordinates in the standard EPSG:4326 projection, which is
        very widespread. But it is also common to get data in UTM formats [http://en.wikipedia.org/wiki/
        Universal_Transverse_Mercator_coordinate_system]. For example, data for Malawi is often distributed as UTM 36S
        projection, which corresponds to EPSG:2736. The conversion can be done by be done by using either Geoserver or ogr2ogr
        wich is part of GDAL and comes with Ubuntu. For Windows, it comes as part of <ulink url="http://www.bostongis.com/           PrinterFriendly.aspx?content_name=ogr_cheatsheet">FW Tools </ulink>. For example, the following line will convert a shapefile 
        called inputfile.shp in UTM 36S projection to a GeoJSON file in lat/lon:
        <programlisting><userinput> ogr2ogr s_srs EPSG:2736 a_srs EPSG:4326 -f &quot;GeoJSON&quot; outputfile.json inputfile.shp </userinput></programlisting> 
      </para>
      </section>
      <section>
        <title>GIS software to view and manipulate map data</title>
        <para>There are many powerful free and open source GIS packages. We recommend the following:</para>
        <itemizedlist>
          <listitem>
            <para><ulink url="http://www.qgis.org/">Quantum GIS</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://www.openjump.org/">OpenJUMP</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://udig.refractions.net/">uDig</ulink>, which also forms basis for <ulink url="http://udig.refractions.net/gallery/cgiar/">DIVA-GIS</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://www.gvsig.gva.es/eng/inicio-gvsig/">gvSIG</ulink></para>
          </listitem>
        </itemizedlist>
        <para>These tools can for example be used to merge village boundary polygons into district polygons (provided the district that each village belongs to is listed as an attribute), and
        one can edit files to reflect new divisions or correct errors.
        Another power tool for working with GIS data is <ulink url="http://postgis.refractions.net/">PostGIS</ulink>, which can be used on itself or in conjunction
          with the above applications.
        </para>
      </section>
    </section>
    <section>
      <title>Conversion of geographical data to GeoJSON format</title>
      <para>The DHIS2 mapping client relies on GeoJSON files in order to display
    a map in the browser window. Often times, geographical data is received in
    many different formats, but the ESRI shape file format is one of the most
    common. Several procedures will be described below. It is important, but
    not required, that the names in your geographical data match those in the
    DHIS2 organisational hierarchy. If they do not, you will need to manually
    match them in a later step</para>
      <section>
        <title>Production of GeoJSON files with GDAL</title>
        <para>GDAL is a multi-platform toolkit for the manipulation of
      geographical data. It is freely available for a wide-range of platforms
      at <ulink url="http://gdal.org">http://gdal.org</ulink></para>
        <para>Production of GeoJSON files are straightforward with GDAL. Just
      execute (on Windows)</para>
        <programlisting><userinput>ogr2ogr.exe -f &quot;GeoJSON&quot; dst_datasource_name src_datasource_name</userinput></programlisting>
        <para>or on Linux<programlisting><userinput>ogr2ogr -f &quot;GeoJSON&quot;dst_datasource_name src_datasource_name</userinput></programlisting></para>
        <para>Replace <parameter>dst_datasource_name</parameter> with the path
      to the destination geographical data file (following the naming
      convention described above) and
      <parameter>src_datasource_name</parameter> with the source geographical
      data file. Take note that you may need to specify input and output coordinate systems as described above.</para>
      </section>
      <section>
        <title>Using Geoserver</title>
        <para>Geoserver is capable of outputting GeoJSON formats. If you have
      geoserver running someplace, you can execute the following query.</para>
        <para><ulink url="http://localhost:8080/geoserver/ows?service=WFS&amp;version=1.0.0&amp;request=GetFeature&amp;typename=topp:states&amp;outputformat=json&amp;srs_name=EPSG:4326">http://localhost:8080/geoserver/ows?service=WFS&amp;version=1.0.0&amp;request=GetFeature&amp;typename=topp:states&amp;outputformat=json&amp;srs_name=EPSG:4326</ulink></para>
        <para> Take note that you need to specify the spatial coordinate system. By default, Geoserver will return GeoJSON files with the format &quot;long/lat&quot; while
the DHIS mapping client expects the ordering of the coordinates in &quot;lat/long&quot; format.  The explicit declaration of the spatial reference system will ensure that coordinates are returned in the proper order. At the time of writing, the DHIS mapping client does not support spatial reference systems other than EPSG 4326. If you are using Geoserver, the application will handle the reprojection from the native format of the geographical data to EPSG 4326. If you are using other methods as described below to generate the GeoJSON file, you will need to ensure that the GeoJSON output is set to EPSG 4326 (Geographical Lat/long). </para>
        <para>You will need to adjust the host destination if the machine is not
      your local machine as well as defining the actual layer in Geoserver
      which should be output to GeoJSON (in this case
      <parameter>topp:states</parameter>).</para>
        <para>Upon execution of the URL, Geoserver will produce a GeoJSON file,
      and you will be asked to save it. Once it has finished downloading,
      rename the file following the suggested naming convention:</para>
        <para>ISO2CountryCode followed by an underscore, followed by the layer
      type (e.g. “admin” for administrative layers, “health” for health
      administrative boundaries). For instance, the first administrative layer
      for Zambia would be named as &quot;zm_admin1&quot;.</para>
      </section>
    </section>
  </section>
</chapter>
