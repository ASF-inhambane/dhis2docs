<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" []>
<chapter>
  <title>Setting up report functionality</title>
  <section>
    <title>Data sources for reporting</title>
    <section>
      <title>Types of data and aggregation</title>
      <para>In the bigger picture of HIS terminology all data in DHIS are usually called aggregated as they are aggregates (e.g. monthly summaries) of medical records or some kind of service registers reported from the health facilities. Aggregation inside DHIS however, which is the topic here, is concerned with how the raw data captured in DHIS (through data entry or import)are further aggregated over time (e.g. from monthly to quarterly values) or up the organisational hierarchy (e.g. from facility to district values). 
</para>
      <section>
        <title>Terminology</title>
        <itemizedlist>
          <listitem>
            <para><emphasis>Raw data</emphasis> refers to data that is registered into the DHIS 2 either through data entry or data import, and has not been manipulated by the DHIS aggregation process. All these data are stored in the table (or Java object if you prefer) called DataValue.
 </para>
          </listitem>
          <listitem>
            <para><emphasis>Aggregated data</emphasis> refers to data that has been aggregated by the DHIS 2, meaning it is no longer raw data, but some kind of aggregate of the raw data.</para>
          </listitem>
          <listitem>
            <para><emphasis>Indicator values</emphasis> can also be understood as aggregated data, but these are special in the way that they are calculated based on user defined formulas (factor * numerator/denominator). Indicator values are therefore processed data and not raw data, and are located in the aggregatedindicatorvalue table/object. Indicators are calculated at any level of the organisational hierarchy and these calculations are then based on the aggregated data values available at each level. A level attribute in the aggregateddatavalue table refers to the organisational level of the orgunit the value has been calculated for.
    </para>
          </listitem>
          <listitem>
            <para>
    <emphasis>Period and Period type</emphasis> are used to specify the time dimension of the raw or aggregated values, and data can be aggregated from one period type to another, e.g from monthly to quarterly, or daily to monthly. Each data value has one period and that period has one period type. E.g data values for the periods Jan, Feb, and Mar 2009, all of the monthly period type can be aggregated together to an aggregated data value with the period Q1 2009 and period type Quarterly.
   </para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>Basic rules of aggregation</title>
        <section>
          <title>What is added together</title>
          <para>Data (raw) can be registered at any organisational level, e.g. at at national hospital at level 2, a health facility at level 5, or at a bigger PHC at level 4. This varies form country to country, but DHIS is flexible in allowing data entry or data import to take place at any level. This means that orgunits that themselves have children can register data, sometimes the same data elements as their children units. The basic rule of aggregation in DHIS 2 is that <emphasis>all raw data is aggregated together</emphasis>, meaning data registered at a facility on level 5 is added to the data registered for a PHC at level 4.</para>
          <para>
It is up to the user/system administrator/designer to make sure that no duplication of data entry is taking place and that e.g. data entered at level 4 are not about the same services/visits that are reported by orgunit children at level 5. NOTE that in some cases you want to have duplication of data in the system, but in a controlled manner. E.g. when you have two different sources of data for population estimates, both level 5 catchment population data and another population data source for level 4 based on census data (because sum of level 5 catchments is not always the same as level 4 census data). Then you can specify using advanced aggregation settings (see further down) that the system should e.g. not add level 5 population data to the level 4 population data, and that level 3,2,1 population data aggregates are only based on level 4 data and does not include level 5 data.</para>
        </section>
        <section>
          <title>How data gets added together</title>
          <para>How data is aggregated depends on the dimension of aggregation (see further down).</para>
          <para>Along the orgunit level dimension data is always summed up, simply added together. Note that raw data is never percentages, and therefore can be summed together. Indicator values that can be percentages are treated differently (re-calculated at each level, never summed up).</para>
          <para>
Along the time dimension there are several possibilities, the two most common ways to aggregate are sum and average. The user can specify for each data element which method to use by setting the aggregation operator (see further down). Monthly service data are normally summed together over time, e.g. the number of vaccines given in a year is the sum of the vaccines given for each month of that year. For population, equipment, staff and other kind of what is often called semi-permanent data the average method is often the one to use, as, e.g. &apos;number of nurses&apos; working at a facility in a year would not be the sum of the two numbers reported in the six-monthly staffing report, but rather the average of the two numbers. More details further down under &apos;aggregation operators&apos;. 
</para>
        </section>
      </section>
      <section>
        <title>Dimensions of aggregation</title>
        <section>
          <title>Organisational units and levels</title>
          <para>Organisational units are used to represent the &apos;where&apos; dimension associated with data values. In DHIS 2, organisational units are arranged in a hierarchy, which typically corresponds to the hierarchical nature of the organisation or country. Organisational unit levels correspond to the distinct levels within the hierarchy. For instance, a country may be organized into provinces, then districts, then facilities, and then sub-centers. This organisational hierarchy would have five levels. Within each level, a number of organisational units would exist. During the aggregation process, data is aggregated from the lower organisational unit levels to higher levels. Depending on the aggregation operator, data may be &apos;summed&apos; or &apos;averaged&apos; within a given organisational unit level, to derive the aggregate total for all the organisational units that are contained within a higher level organisational unit level. For instance, if there are ten districts contained in a province and the aggregation operator for a given data element has been defined as &apos;SUM&apos;,  the aggregate total for the province would be calculated as the sum of the values of the individual ten distrincts contained in that province.</para>
        </section>
        <section>
          <title>Period</title>
          <para>Periods are used to represent the &apos;when&apos; dimension associated with data values. Data can easily be aggregated from weeks to months, from months to quarters, and from quarters to years. DHIS 2 uses known rules of how these different intervals are contained within other intervals (for instance Quarter 1 2010 is known to contain January 2010, February 2010 an March 2010) in order to aggregate data from smaller time intervals, e.g. weeks, into longer time intervals, e.g. months. </para>
        </section>
        <section>
          <title>Data Elements and Categories</title>
          <para>The data element dimension specifies &apos;what&apos; is being recorded by a particular data value. Data element categories are actually degenerated dimensions of the data element dimension, and are used to disaggregate the data element dimension into finer categories. Data element categories, such as &apos;Age&apos; and &apos;Gender&apos;, are used to record a particular data element, typically for different population groups. These categories can then be used to calculate the overall total for the category  and the total of all categories. </para>
        </section>
      </section>
      <section>
        <title>Aggregation operators, methods for aggregation</title>
        <section>
          <title>Sum</title>
          <para>The &apos;sum&apos; operator simply calcuates the sum of all data values that are contained within a particular aggregation matrix. For instance, if data is recorded on a monthly basis at the district level and is aggregated to provincial quarterly totals, all data contained in all districts for a given province and all weeks for the given quarter will be added together to obtaine the aggregate total.</para>
        </section>
        <section>
          <title>Average</title>
          <para>When the average aggregation operator is selected, the unweighted average of all data values within a given aggregation matrix are calculated. </para>
          <para>It is important to understand how DHIS 2 treats null values in the context of the average operator. It is fairly common for some organisational units not to submit data for certain data elements. In the context of the average operator, the average results from the number of data elemements that are actually present (therefore NOT NULL) within a given aggregation matrix. If there are 12 districts within a given province, but only 10 of these have submitted data, the average aggreate will result from these ten values that are actually present in the database, and will not take into account the missing values.  </para>
        </section>
        <section>
          <title>Count</title>
          <para/>
        </section>
        <section>
          <title>Where to specify </title>
          <para/>
        </section>
      </section>
      <section>
        <title>Advanced aggregation settings (aggregation levels)</title>
        <section>
          <title>Aggregation levels</title>
          <para>The normal rule of the system is to aggregate all raw data together when moving up the organisational hierarchy, and the system assumes that data entry is not being duplicated by entering the same services provided to the same clients at both facility level and also entering an &apos;aggregated&apos; (sum of all facilities) number at a higher level. This is to more easily facilitate aggregation when the same services are provided but to different clients/catchment populations at facilities on level 5 and a PHC (the parent of the same facilities) at level 4. In this way a facility at level 5 and a PHC at level 4 can share the same data elements and simply add together their numbers to provide the total of services provided in the geographical area.</para>
          <para>Sometimes such an aggregation is not desired, simply because it would mean duplicating data about the same population. This is the case when you have two different sources of data for two different orgunit levels. E.g. catchment population for facilities can come from a different source than district populations and therefore the sum of the facility catchment populations do not match the district population provided by e.g. census data. If this is the case we would actually want duplicated data in the system so that each level can have as accurate numbers as possible, but then we do NOT want to aggregate these data sources together.
</para>
          <para>In the Data Element section you can edit data elements and for each of them specify how aggregation is done for each level. In the case described above we need to tell the system NOT to include facility data on population in any of the aggregations above that level, as the level above, in this case the districts have registered their population directly as raw data. The district population data should then be used at all levels above and including the district level, while facility level should use its own data.</para>
        </section>
        <section>
          <title>How to edit data element aggregation</title>
          <para>This is controlled through something called aggregation levels and at the end of the edit data element screen there is a tick-box called Aggregation Levels. If you tick that one you will see a list of aggregation levels, available and selected. Default is to have no aggregation levels defined, then all raw data in the hierarchy will be added together. To specify the rule described above, and given a hierarchy of Country, Province, District, Facility: select Facility and District as your aggregation levels. Basically you select where you have data. Selecting Facility means that Facilities will use data from facilities (given since this is the lowest level). Selecting District means that the District level raw data will be used when aggregating data for District level (hence no aggregation will take place at that level), and the facility data will not be part of the aggregated District values. When aggregating data at Province level the District level raw data will be used since this is the highest available aggregation level selected. Also for Country level aggregates the District raw data will be used. Just to repeat, if we had not specified that District level was an aggregation level, then the facility data and district data would have been added together and caused duplicate (double) population data for districts and all levels above.</para>
        </section>
      </section>
    </section>
    <section>
      <title>Data mart</title>
      <para>The purpose of the data mart is to provide pre-processed data to external data analysis and reporting tools. The data mart consists of two tables, aggregateddatavalues and aggregatedindicatorvalues in the DHIS 2 database. The values in the data mart are aggregated versions of the raw data found in the datavalue table as well as calculated indicator values. Aggregation can take place over time (e.g. from monthly data to aggregated quarterly values), or place (e.g. from PHU data to aggregated district totals) and the data mart can store all kinds of such aggregated values. The data mart is as such just a processed &apos;copy&apos; of the data values and it can be emptied and regenerated at any time, and the tables are read only tables. The metadata in the two data mart tables are referenced by internal identifiers, such as dataelementid, organisationunitid which refer to the tables like dataelement and organisationunit, see &apos;How to make use of the data mart in external tools&apos; for more on this. How the data is aggregated and what ends up in these two tables is controlled from the Data mart export user interface under the Services submenu.</para>
      <section>
        <title>The data mart export process</title>
        <section>
          <title>How to create a data mart export</title>
          <para>In the Data mart management window click on the Add New button and a Generate data mart window will open. There are 4 selection boxes; Data elements, Indicators, Organisation units, and periods. For each of the boxes select what you want to export, note if you don&apos;t want both data elements and indicators, you can leave one of these empty, but at least one of these need some selected items together with selected orgunits and periods. The available list on the left side can be filtered by data element group, indicator group, organisation unit level, and period type accordingly. You can move items across to the selected list by double clicking on an item in the available list or by selecting an item and use the move buttons (see &apos;Selection buttons&apos; explanations below).

</para>
          <para>To export your data mart, you have to save it first. Type a name (preferrably a name that reflects what the data mart covers) in the box at the top of the page, and click the Save button at the bottom. You will be taken back to the &apos;Data mart export management&apos; page. To export your data mart, click on the green button next to your data mart.

</para>
          <para><emphasis role="bold">Selection buttons</emphasis>
</para>
          <itemizedlist>
            <listitem>
              <para>&gt; will move the selected item across form the available list on the left to the selected list on the right
</para>
            </listitem>
            <listitem>
              <para>&gt;&gt; will move all items in the available list across to the selected list
</para>
            </listitem>
            <listitem>
              <para>&gt;&gt;&gt; only applies to orgunits and will move the children of the selected orgunit across to the selected list
</para>
            </listitem>
          </itemizedlist>
        </section>
        <section>
          <title>Orgunit levels</title>
          <para>The data mart can include values aggregated to different levels in the same table and exactly which level a value belongs to is described by the &apos;level&apos; column. When pulling data output of the data mart into external tools it is important to be aware of this level as combining data for different levels will result in duplication. 

For DHIS 1.4 users this means that there is no longer a separate table per level, but instead one common table and a level column that separates the levels. Also note that while in 1.4 you specify in the individual data element and indicator definitions to which orgunit levels the data mart should export to, in DHIS 2 this is only defined in the data mart export window. So in DHIS 2 this is completely decoupled from the data element and indicator definitions and up to any user to define which orgunits (at any level) they want to see aggregated data for.
</para>
        </section>
        <section>
          <title>Period types/ data frequencies</title>
          <para>The data mart can hold values aggregated to different period types or frequencies, e.g. monthly, quarterly or yearly data. The &apos;periodtypeid&apos; refers to the frequency the value belongs to, and the periodids column refers to the exact period, e.g. the periodtype can be &apos;monthly&apos; and the period be &apos;Jan-2010&apos;. Again be careful in combining values with different periodtypes as this will cause duplication.


</para>
          <para>Which orgunits that get exported to data mart (the two tables agggregateddatavalue and aggregatedindicatorvalue) are ONLY controlled through the data mart export window, and there you define this per orgunit, not per orgunit level. There is a filter using orgunit level, but the orgunits that are selected are the only ones that end up in the data mart. Equivalently, only selected data elements and indicators end up in the data mart.

</para>
          <para>Every time you do a data mart you can change which orgunits to export data for. The data values will automatically be aggregated up to the orgunit that is selected, no matter what level.
</para>
        </section>
        <section>
          <title>Data element categories in the data mart</title>
          <para>Each data value for a data element has a reference to a category option combo, which is a combination of the disaggregations for the data value, e.g. (male,&lt;5y) or (In PHU, &lt;1y). These disaggregations are exported as they are to the data mart, and no aggregation is done on this dimension. See the data elements section for more on data element categories and the resource tables section for more information on how to do aggregation on these categories.</para>
        </section>
        <section>
          <title>Limitation to the number of data elements per export</title>
          <para>Due to the limitation in number of columns per table in the database there is a limit to how many data elements that can be selected per data mart export. In postgres this limit is 255 (need to verify this number) data elements. If you need to export more than this number of data elements you have to split it up into multiple data mart exports and run them one by one.</para>
        </section>
        <section>
          <title>Adding new data to an existing data mart</title>
          <para>When you add new data to an existing data mart the new values will be appended to the existing so that the data mart grows for each new process if new selections (such as new periods) have been made. If any of the selected values are already in the data mart, then the old will be replaced by the newly generated values. </para>
        </section>
      </section>
      <section>
        <title>Saved data mart exports</title>
        <para>To simplify the selection process, you can save a data mart export, which basically means saving the selected items (not the data), so that you can run the same at a later point without re-selecting everything. New months need to be added though, while orgunits, data elements and indicators usually stay the same.</para>
        <para>RELATIVE PERIODS IN Data mart -NEW!!</para>
      </section>
      <section>
        <title>Routinely data mart export procedures</title>
        <para>RELATIVE PERIODS IN Data mart -NEW!!</para>
        <para>In a monthly data entry cycle, the typical work routine would be to run all the data mart exports after the data entry process has been finalised. For each of the saved data marts you would typically select the current reporting month and export only for that period to add the newly registered values (and aggregates based on these) to the existing data mart. If any backlog data has been entered or values for previous period have been corrected since the last data mart export then these periods also need to be added.   

E.g. in Sierra Leone they have set up a series of saved data mart exports:
- PHU all indicators
- Chiefdom (subdistrict) all indicators
- District all indicators
- PHU morbidity and mortality raw data
- PHU EPI and nutrition raw data
- PHU HIV data
- PHU RCH data
- Chiefdom Morbidity and Mortality data
- etc.

These exports are then run every month when there is new data. Each saved export is opened one by one, the new period added and the export run. 
</para>
      </section>
    </section>
    <section>
      <title>Resource tables</title>
      <para>Resource tables provide additional information about the dimensions of the data in a format that is well suited for external tools to combine with the data mart tables. By joining the data mart with these resource tables one can easily aggregate along the data element category dimension or data element/indicator/organisation unit groups dimensions. E.g. by tagging all the data values with the category option male or female and provide this in a separate column &apos;gender&apos; one can get subtotals of male and female based on data values that are collected for category option combinations like (male, &lt;5) and (male,&gt;5). See the Pivot Tables section for more examples of how these can be used.

orgunitstructure is another important table in the database that helps to provide the hierarchy of orgunits together with the data. By joining the orgunitstructure table with the data mart tables you can get rows of data values with the full hierarchy, e.g. on the form:
OU1, OU2, OU3, OU4, DataElement, Period, Value
(Sierra Leone, Bo, Badija, Ngelehun CHC, BCG &lt;1, Jan-10, 32)

This format makes it much easier for e.g. pivot tables or other OLAP tools to aggregate data up the hierarchy.
</para>
    </section>
    <section id="reportTable">
      <title>Report tables</title>
      <para>Report tables are meant to be database tables fulfilling the specific data needs of a report, chart, pivot table or other output format. It can be understood as a mini data mart that contains only the data needed for its purpose (the report). The rationale behind this concept is to automatically provide the data sources for reports without bothering the users every time, like a normal data mart, and to speed up the data processing and aggregation (small targeted data marts are obviously faster than big ones).

When created and generated a report table will appear in the DHIS 2 database as a normal table, but always with the prefix &apos;_report_&apos;. This table should not be altered manually as it is controlled by the system. These tables are constantly being deleted and recreated as the user wants new updated data within the same table structure. These tables can then be access and used from any third party tool for displaying data. DHIS 2 now suports reports created with Jaspersoft iReport Designer (up to v 2.0.6 DHIS 2 was integrated with the BIRT report designer from the Eclipse platform), and this makes it especially easy to link Jasper reports to report tables and to run these reports from within DHIS 2. However, we see report tables as a much broader tool and concept than to just support Jasper reports. It can and should (for performance gain and automation) be used for as many data output purposes as possible, e.g. as data sources for the database views used for Excel pivot tables.
</para>
      <para>A report table is a data source that can be defined once and then run automatically in the background when a report needs new and updated data. Standard reports are directly linked to one or more report tables and these are then automatically processed in the background when the report is run. Report parameters are added to the report tables to make these generic and reusable over time or across different orgunits. </para>
    </section>
  </section>
  <section>
    <title>How to create report tables</title>
    <para>To create a new report table, click on one of the four Add buttons in the top right corner on the &apos;Report Table&apos; page (Services -&gt; Reports -&gt; Report Table).</para>
    <section>
      <title>Data Element and Indicator tables</title>
      <para>These two tables types are very similar with the only difference being that one has data element values and the other indicator values.</para>
      <para><emphasis role="bold">Cross tab dimensions</emphasis></para>
      <para>You can cross-tab one or more of the following dimensions: data element/indicator, orgunit, and period, which means that columns will be created based on the values of the dimensions chosen, e.g. if indicators is selected you will get column names in the table reflecting the names of the selected indicators. You must select at least 1 dimension for the table to be valid. Selecting all 3 is possible, but makes little sense.</para>
      <para>
For example, if you cross-tab on indicators and periods, the column headers will say &quot;&lt;indicator title&gt; &lt;period&gt;&quot;. The organisation units will be listed as rows. See screenshot for clarification:
</para>
      <screenshot>
        <screeninfo>Indicators and periods are cross-tabbed</screeninfo>
        <mediaobject>
          <imageobject>
            <imagedata width="50%" fileref="resources/images/dhis2_creating_reporting/crosstab_ind-per.jpg" format="JPEG"/>
          </imageobject>
        </mediaobject>
      </screenshot>
      <para>
If you cross-tab on indicators and organisation units, the column headers of the table will say &quot;&lt;indicator title&gt; &lt;organisation unit&gt;&quot;. Now the periods will be listed as rows. See screenshot for clarification:
</para>
      <screenshot>
        <screeninfo>Indicators and organisation units are cross-tabbed</screeninfo>
        <mediaobject>
          <imageobject>
            <imagedata width="50%" fileref="resources/images/dhis2_creating_reporting/crosstab_ind-org.jpg" format="JPEG"/>
          </imageobject>
        </mediaobject>
      </screenshot>
      <para><emphasis role="bold">Include regression</emphasis></para>
      <para>This adds additional columns with regression values that can be included in the report design, e.g. in line charts.</para>
      <para><emphasis role="bold">Indicators/Data elements</emphasis></para>
      <para>Here you select the data elements/indicators that you want to include in the report. Use the group filter to more easily find what you are looking for and double click on the items you want to include.</para>
      <para><emphasis role="bold">Organisation Units</emphasis></para>
      <para>Here you can either choose some fixed/static orgunits to always include in the report, or you can leave this section empty and let the users select orgunits when running the report through the use of  report parameters (see further down).</para>
      <para><emphasis role="bold">Periods</emphasis></para>
      <para>Here you can either choose fixed periods that you always want to include in the report or leave this section empty and choose relative periods in stead.</para>
      <para><emphasis role="bold">Relative periods</emphasis></para>
      <para>Instead of using fixed/static periods like &apos;Jan-2010&apos; or &apos;Q1-2010&apos;, more generic periods can be used to create reusable report tables, e.g. for monthly reports the period &apos;Reporting month&apos; will simply pick the current reporting month selected by the user when running the report. Here is a description of the possible relative periods:

</para>
      <itemizedlist>
        <listitem>
          <para><emphasis role="italic">Reporting month:</emphasis></para>
          <para>Use this for monthly reports. The month selected in the reporting month parameter will be used in the report.
</para>
        </listitem>
        <listitem>
          <para><emphasis role="italic">Months/Quarters this year</emphasis>: </para>
          <para>This will provide one value per month or quarter in the year. This is well suited for standard monthly or quarterly reports where all month/quarters need to be listed. Periods that still have no data will be empty, but will always keep the same column name.
</para>
        </listitem>
        <listitem>
          <para><emphasis role="italic">This year:</emphasis> </para>
          <para>This is the cumulative so far in the year, aggregating the periods from the beginning of the year up to and including the selected reporting month.
</para>
        </listitem>
        <listitem>
          <para><emphasis role="italic">Months/Quarters last year</emphasis>: </para>
          <para>This will provide one value per month or quarter last year, relative to the reporting month. This is well suited for standard monthly or quarterly reports where all month/quarters need to be listed. Periods that still have no data will be empty, but will always keep the same column name.
</para>
        </listitem>
        <listitem>
          <para><emphasis role="italic">Last year:</emphasis> </para>
          <para>This is the cumulative last year, relative to the reporting month, aggregating all the periods from last year.
</para>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Example - relative periods</emphasis></para>
      <para>Let&apos;s say we have chosen three indicators: A, B and C, and we have also chosen to use the relative periods &apos;Reporting month&apos; and &apos;This year&apos; when we created the report table. When we&apos;re running the report table, we will be asked to select a reporting month. Now, if we choose May 2010, the report table will calculate the values for the three selected indicators for May 2010 (= the &apos;Reporting month&apos;) and the accumulated values for the three selected indicators so far in 2010 (= so far &apos;This year&apos;).</para>
      <para>Thus, we will end up with six values for each of the organisation units: &quot;Indicator A May 2010&quot;, &quot;Indicator B May 2010&quot; &quot;Indicator C May 2010&quot;, &quot;Indicator A so far in 2010&quot;, &quot;Indicator B so far in 2010&quot; and &quot;Indicator C so far in 2010&quot;.</para>
      <para><emphasis role="bold">Report parameters</emphasis></para>
      <para>Report parameters make the reports more generic and reusable over time and for different orgunits. These parameters will pop up when generating the report table or running a report based on the report table, and the users will select what they want to see in the report. There are three possible report parameters, and you can select to use none, 1, 2 or all 3 parameters.

</para>
      <itemizedlist>
        <listitem>
          <para><emphasis role="italic">Reporting month:</emphasis> </para>
          <para>This decides which month that will be used, when the system is choosing the relative periods.
</para>
        </listitem>
        <listitem>
          <para><emphasis role="italic">Parent organisation unit:</emphasis> </para>
          <para>Select the parent of all the orgunit children you want listed in the report. E.g. a selected district will trigger the use of the district itself and all its children/sub-districts.
</para>
        </listitem>
        <listitem>
          <para><emphasis role="italic">Organisation unit:</emphasis> </para>
          <para>This triggers the use of this orgunit in the report. No children are listed.
</para>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Example - report parameters</emphasis></para>
      <para>Continuing with the example on relative periods just above, let&apos;s say that in addition to &apos;Reporting month&apos;, we have chosen  &apos;Parent organisation unit&apos; as a report parameter when we created the report table. When we&apos;re running the report table, we will be asked to select an organisation unit. Now, let&apos;s say we choose &quot;Region R&quot; as the organisation unit. &quot;Region R&quot; has the children &quot;District X&quot; and &quot;District Y&quot;.</para>
      <para>When the report is run, the system will aggregate data for both &quot;District X&quot; and &quot;District Y&quot;. The data will be aggregated from the lowest level where they have been collected. The values for the districts will be aggregated further to give an aggregated value for &quot;Region R&quot;.</para>
      <para>Thus, the report table will generate the six values presented in the previous example, for &quot;District X&quot;, &quot;District Y&quot; and &quot;Region R&quot;.</para>
    </section>
    <section>
      <title>Data element dimension tables</title>
      <para>These tables enable the use of data element categories in report tables. One category combination per report. Subtotals and the total will also be included in the table, e.g. a gender(male,female)+EPI age(&lt;1,&gt;1 category combo would give the following columns:
male+&lt;1, male+&gt;1, Female+&lt;1, female+&gt;1, male, female,&lt;1, &gt;1, total.

</para>
      <para>Only data elements from the same category combination can be included.

</para>
      <para>All cross tab dimensions are disabled since the columns are the various disaggregations from the category combination.

</para>
      <para>Orgunit, periods and parameters as in the data element/indicator tables.
</para>
    </section>
    <section>
      <title>Report table - best practices</title>
      <para>To make the report tables reusable over time and across orgunits they can have \ parameters. Three types of parameters are allowed; orgunit, parent orgunit (for listing of orgunits in one area) and reporting month. As a side note it can be mentioned that we are looking into expanding this to include reporting quarter and year, or to make that period parameter more generic with regard to period type somehow. The ability to use period as a parameter makes the report table reusable over time and as such fits nicely with report needs such as monthly, quarterly or annual reports. When a report is run by the user in DHIS 2, the user must specify the values for the report tables that are linked to the report. First the report table is re-generated (deleted and re-created with updated data), and then the report is run (in the background, in Jasper report engine).

</para>
      <para>Report tables can consist of either values related to data elements or indicators, and not a mix of the two. The reason for not mixing data elements and indicators in one report table is due to the cross tab functionality that would be very complex and less useful with yet another dimension. Since two or more report tables can easily be linked to one report, this limitation should not have much effect on report design possibilities.
</para>
      <para>
A third report table type is data completeness, which is related to completeness of reporting across orgunits for a given month. Completeness reports will be covered in a separate section. 
</para>
      <para>There are three dimensions in a report table that identify the data; indicators or data elements, orgunits and periods. For each of these dimensions the user can select which metadata values to include in the report. The user must select one or more data elements or indicators to appear in the report. The orgunit selection can be substituted with a parameter, either one specific orgunit or an orgunit parent (making itself and all its children appear in the report). If one or more orgunits are selected and no orgunit parameter is used, then the report is static with regard to which orgunits to include, which in most cases is an unnecessary restriction to a report.</para>
      <para><emphasis role="bold">Using relative periods</emphasis></para>
      <para>The period selection is more advanced as it can in addition to specific periods like Jan-09, Q1-08, 2007 also contain what is called relative periods. As report usually is run routinely over time a specific period like Jan-09 is not very useful in a report. Instead, if you want to design a monthly report, you should use the relative period called Reporting Month. Then you must also include Reporting Month as one of your report parameters to let the system know what exactly is the Reporting Month on the time of report generation. There are many other relative periods available, and they all relate to the report parameter Reporting Month. E.g. the relative period called So far this year refers to the accumulative value for the year incl. the Reporting Month. If you want a trend report with multiple periods in stead of one aggregated period, you can select e.g. &apos;Months this year&apos;, which would give you values for each month so far in the year. You can do a similar report with quarters. The idea is to support as many generic report types as possible using relative periods, so if you have other report needs, please suggest new relative periods on the mailing list, and they might be added to the report table options.</para>
      <para><emphasis role="bold">Cross-tabbing dimensions</emphasis></para>
      <para>Cross tabbing is a very powerful functionality in report design, as the typical DHIS 2 data table with references to period, data element/indicator and orgunit makes more advanced report design very difficult, as you cannot put e.g. specific indicators, periods or orgunits on specific columns. E.g. by cross-tabbing on the indicator dimension in an indicator report table you will get the indicator names on the column headers in your report, in addition to a column referencing orgunit, and another column referencing period. With such a table design you could drag and drop indicator names to specific columns or chart positions in the iReport software. Similarly you can cross tab on orgunits or periods to make their names specifically available to report design. E.g. by cross-tabbing on periods and selecting the two relative periods &apos;Reporting month&apos; and &apos;This year&apos;, you can design reports with both the last month and the accumulative annual value for given month as they will be available as column headers in your report table. It is also possible to combine two dimensions in cross-tabbing, e.g. period and indicator, which makes it possible to e.g. look at three selected indicators for two specific relative periods. This would e.g. make it possible to make a table or chart based report with BCG, DPT3 and Measles coverage, both for the last month and the accumulative coverage so far in the year. 

</para>
      <para>All in all, by combining the functionality of cross tabbing, relative periods and report table parameters you should have a tool to support most report scenarios. If not, we would be very happy to receive suggestions to further improvements to report tables. As already mentioned, we have started to look at more fine-grained parameters for the period dimension as the &apos;Reporting month&apos; does not cover enough, or at least is not intuitive enough, when it comes to e.g. quarterly reports.
</para>
    </section>
  </section>
  <section>
    <title>Report table outcome</title>
    <para>
When the report table is run, the system will calculate values for specified indicators/data elements/data sets, orgunits and periods. The data will be presented in DHIS 2 in a table layout. The column headers will correspond to the cross-tab dimension you have selected. An example report table showing ANC coverage for a district in The Gambia, is shown below. Here the indicator and the periods are cross-tabbed, as can be seen from the column headers.
</para>
    <screenshot>
      <screeninfo>Example report table</screeninfo>
      <mediaobject>
        <imageobject>
          <imagedata width="50%" fileref="resources/images/dhis2_creating_reporting/crosstab_ind-per.jpg" format="JPEG"/>
        </imageobject>
      </mediaobject>
    </screenshot>
    <para>
Above the table there are six buttons; five download buttons and one Back button. Clicking the Back button will simply take you back to the previous screen. The function of the five download buttons, are presented below the screenshot:
</para>
    <screenshot>
      <screeninfo>The download buttons</screeninfo>
      <mediaobject>
        <imageobject>
          <imagedata width="100%" fileref="resources/images/dhis2_creating_reporting/report-table_output.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </screenshot>
    <para><emphasis role="bold">The five download buttons</emphasis></para>
    <itemizedlist>
      <listitem>
        <para><emphasis role="italic">Download as Excel:</emphasis></para>
        <para>Downloads a generated Excel file you can open in Excel.</para>
        <para/>
      </listitem>
      <listitem>
        <para><emphasis role="italic">Download as CSV:</emphasis></para>
        <para>Downloads a generated .csv file. CSV stands for <emphasis role="bold">C</emphasis>omma <emphasis role="bold">S</emphasis>eparated <emphasis role="bold">V</emphasis>alues. It&apos;s a text file with the file ending .csv. Each  line in the file corresponds to a row in the table, while the columns are separated with semi colons (;). The file can be opened in a text editor as well as in a spread sheet program (such as Excel).</para>
        <para/>
      </listitem>
      <listitem>
        <para><emphasis role="italic">Download as PDF:</emphasis></para>
        <para>Downloads a generated pdf file. The data will be presented in a similar layout as the generated table you are already viewing in DHIS 2.</para>
        <para/>
      </listitem>
      <listitem>
        <para><emphasis role="italic">Download as Report:</emphasis></para>
        <para>Downloads a &quot;styled&quot; pdf file. In addition to present the data in a table layout, this file also presents a chart, showing the aggregated data from all the chosen periods and the parent organisation unit chosen for the report table. The report is generated using the Jasper report engine.</para>
        <para/>
      </listitem>
      <listitem>
        <para><emphasis role="italic">Download as JRXML:</emphasis></para>
        <para>Downloads the design file for the generated Report described in the previous bullet. The design file (with the file ending .jrxml) can be opened in the Jasper iReport Designer software. If you plan to design standard reports, this is the starting point.</para>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Standard reports</title>
    <section>
      <title>What is a standard report?</title>
      <para>A standard report is a manually designed report that presents manually chosen data in a manually specified layout. Still, it&apos;s highly flexible, as it can be designed to be reused over and over again, by making use of the powerful report tables.</para>
      <para>A standard report can present any value from any table in the DHIS 2 database, but for the report design, we want the reports to be flexible, so we want to connect the reports to tables that changes through time. The report tables are therefore ideal for the report design.</para>
    </section>
    <section>
      <title>Designing Standard reports in iReport</title>
      <para>Jasper iReport Designer is a tool for creating reports that can be used as Standard Reports in DHIS 2. The tool allows for the creation of standard report templates that can easily be exported from DHIS 2 with up to date data. The process of creating reports involves four major steps:</para>
      <orderedlist>
        <listitem>
          <para>A report table must be created in DHIS 2 with the indicators/data elements/datasets to be used in the report.</para>
        </listitem>
        <listitem>
          <para>You have to run the report table and download the design file (Click the &quot;Download as JRXML&quot; button).</para>
        </listitem>
        <listitem>
          <para>Open the downloaded .jrxml file using the free software Jasper iReport Designer to edit the layout of the report.</para>
        </listitem>
        <listitem>
          <para>The edited report can then be uploaded to DHIS 2 to be used as a standard report.</para>
        </listitem>
      </orderedlist>
      <para>If you want to preview your report during the design in iReport, you actually have to upload your file to DHIS 2 to see how it looks.</para>
      <para>These four steps will be describe in detail in the coming sections.</para>
      <section>
        <title>Download and open the design file</title>
        <para><emphasis>Note: If you have not created a report table yet, you have to do so. See section &quot;How to create report tables&quot; to do so.</emphasis></para>
        <para>Locate your desired report table and run it by clicking the green circle with a white arrow inside. When the report is shown, click the &quot;Download as JRXML&quot; button to download the design file. Then open that file in the Jasper iReport Designer software.</para>
      </section>
      <section>
        <title>Editing the report</title>
        <para>You are now ready to edit the layout of the report. The main iReport window consists of a &quot;Report Inspector&quot; to the left, the report document in the middle, a &quot;Palette&quot; area on the upper right hand side and a &quot;Properties&quot; area on the lower right hand side. The &quot;Report Inspector&quot; are used for selecting and examining the various properties of the report, and when selecting an item in the inspector, the &quot;Properties&quot; panel changes to display properties relating to the selection. The &quot;Palette&quot; is used for adding various elements, e.g. text boxes, images and charts to the document.  
</para>
        <screenshot>
          <screeninfo>Overview of the main iReport window</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="100%" fileref="resources/images/dhis2_creating_reporting/ireport/iReport-window.png" format="PNG"/>
            </imageobject>
          </mediaobject>
        </screenshot>
        <para><emphasis>Note: If you cannot see the Palette or Properties sidebar, you can enable them from the menu item called &quot;Window&quot; on the menu bar.</emphasis></para>
        <para>The iReport document is divided into seven main bands, divided by layout separators (the blue lines). These lines are used to decide how big each of the areas should be on the report. 
</para>
        <para>The areas all have different purposes:
</para>
        <itemizedlist>
          <listitem>
            <para>Title - area for the title of the report</para>
          </listitem>
          <listitem>
            <para>Page header - area for the page header</para>
          </listitem>
          <listitem>
            <para>Column header - area for column headers (for the table)</para>
          </listitem>
          <listitem>
            <para>Detail 1 - area where the actual report data will be placed</para>
          </listitem>
          <listitem>
            <para>Column footer - area to make footer of the table</para>
          </listitem>
          <listitem>
            <para>Page footer - area for the page footer</para>
          </listitem>
          <listitem>
            <para>Summary - elements in this area will be placed at the end of the report</para>
          </listitem>
        </itemizedlist>
        <para>By default you will see that only the Title, Column Header and the Detail 1 bands have data.
        For most reports this is OK. The Title band is suitable for a title and e.g. a chart. 
        Data fields entered into the Detail 1 area will be iterated over to create a table. 
        For example, if a field called &quot;datalementname&quot; is placed in the Detail 1 band,
        all data elements in the report table will be listed here. 
        We&apos;ll come back to data fields management just a little below.</para>
        <para>The unused bands in the report are shrinked to add more space for your report data. You can
        however increase/decrease the band height as you like. There are two ways to do that. The first way is simply to drag the blue band-line as shown below.</para>
        <screenshot>
          <screeninfo>Drag the blue lines to change the band heights</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="66%" fileref="resources/images/dhis2_creating_reporting/ireport/17_drag.jpg" format="JPEG"/>
            </imageobject>
          </mediaobject>
        </screenshot>
        <para>The other way to adjust the band height is to select a band in the 
        &quot;Report Inspector&quot;, and then adjust the &quot;Band height&quot; value in the 
        &quot;Detail 1 - properties&quot; area in the lower right corner.</para>
        <screenshot>
          <screeninfo>Adjust the size of layout areas by changing the Band height property</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="60%" fileref="resources/images/dhis2_creating_reporting/ireport/18_adjust.jpg" format="JPEG"/>
            </imageobject>
          </mediaobject>
        </screenshot>
        <para>As the fields are already present on the report, you probably don&apos;t want to do anything
        than just fix the layout and drag fields around. You can also resize the fields by dragging the side, top or bottom lines. If you want to change the text in the column headers, you simply double click the field and change the text.</para>
        <para>To add the a field to the table, we simply drag it to the Detail 1 band from the &quot;Report Inspector&quot;. The column header will be added automatically.</para>
        <para>By double clicking the box, the text can be edited. The format of the text, such as size, font and alignment, can be adjusted with the tools above the document.</para>
        <screenshot>
          <screeninfo>Double click to edit the text, and change its appearance</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="50%" fileref="resources/images/dhis2_creating_reporting/ireport/21_title_edit.jpg" format="JPEG"/>
            </imageobject>
          </mediaobject>
        </screenshot>
        <para><emphasis role="bold">
            <emphasis role="italic">
              <emphasis role="bold">
                <emphasis role="bold">
                  <emphasis>
                    <emphasis role="bold">NOTE: Fields starting with &quot;$F&quot; present values that are retrieved from the database every time the report is run. The values here will vary, so do not change these fields unless you want a static value here!</emphasis>
                  </emphasis>
                 </emphasis>
              </emphasis>
            </emphasis>
          </emphasis></para>
      </section>
      <section><title>Charts</title><para>The auto-generated report already has a chart. This can however be edited. To do that, right-click on the chart and select &quot;Chart Data&quot;.</para><screenshot>
          <screeninfo>Select Chart Data by right clicking on the chart</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="50%" fileref="resources/images/dhis2_creating_reporting/ireport/32_editchart_1.jpg" format="JPEG"/>
            </imageobject>
          </mediaobject>
        </screenshot><para>Go to the &quot;Details&quot; tab to see what is actually shown in the chart.
</para><screenshot>
          <screeninfo>Go the Details and Add a Category series</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="50%" fileref="resources/images/dhis2_creating_reporting/ireport/33_editchart_2.jpg" format="JPEG"/>
            </imageobject>
          </mediaobject>
        </screenshot><para>If you select a series and then click the &quot;Modify&quot; button, a new window will appear. There are four fields that we can fill out, where the three first are mandatory and are already automatically filled.
</para><screenshot>
          <screeninfo>The Category series window</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="50%" fileref="resources/images/dhis2_creating_reporting/ireport/34_editchart_3.jpg" format="JPEG"/>
            </imageobject>
          </mediaobject>
        </screenshot><para>You can edit each field by pressing the edit button on the righ.t</para><screenshot>
          <screeninfo>Edit the category expression</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="66%" fileref="resources/images/dhis2_creating_reporting/ireport/35_editchart_4.jpg" format="JPEG"/>
            </imageobject>
          </mediaobject>
        </screenshot><para>A new window appears with the available fields. A list of available fields to put in the chart will show. If you double-click one of the items, it will be added to the Expression editor.</para><screenshot>
          <screeninfo>Double click on the desired field</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="66%" fileref="resources/images/dhis2_creating_reporting/ireport/36_editchart_5.jpg" format="JPEG"/>
            </imageobject>
          </mediaobject>
        </screenshot><para>To make the chart more informative and better looking, we can select it by clicking on it and use the &quot;Properties&quot; panel on the right hand side to make adjustments. For example, you can add a title to the chart, change the font, rotate the axis labels (as shown below) and so on.</para><screenshot>
          <screeninfo>Edit the chart properties</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="66%" fileref="resources/images/dhis2_creating_reporting/ireport/39_editchart_9.jpg" format="JPEG"/>
            </imageobject>
          </mediaobject>
        </screenshot></section>
      <section>
        <title>Adding the Report to DHIS 2</title>
        <para>We can now switch to DHIS 2 and import our report. Go to the Report Module in DHIS 2, and select &quot;Standard Report&quot;. In the &quot;Standard Report&quot; screen, click &quot;Add new&quot;, or edit an existing one.</para>
        <para>In the following screen, there are several actions we need to take. First, enter a name for the new &quot;Standard Report&quot;. Second, for design, click &quot;Choose File&quot; and find the .jrxml-file you have edited in iReport. Then we select the report table that we used as a basis for the report in iReport. Click add, and it should move to the &quot;Selected report tables&quot; area. Finally, click save. 
</para>
        <screenshot>
          <screeninfo>Upload the file and choose the right report table</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="66%" fileref="resources/images/dhis2_creating_reporting/ireport/27_new_std_report.jpg" format="JPEG"/>
            </imageobject>
          </mediaobject>
        </screenshot>
        <para>The report is now available as a &quot;Standard Report&quot; in DHIS 2:</para>
        <screenshot>
          <screeninfo>The report is available as a Standard Report</screeninfo>
          <mediaobject>
            <imageobject>
              <imagedata width="50%" fileref="resources/images/dhis2_creating_reporting/ireport/28_done.jpg" format="JPEG"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </section>
      <section>
        <title>Some final guidelines</title>
        <itemizedlist>
          <listitem>
            <para>Use the same version of iReport and DHIS 2&apos;s version of Jasper reports. See the About page in DHIS 2 for the Jasper version in use.</para>
          </listitem>
          <listitem>
            <para>Use report tables with cross tab dimensions  as your data source for your report designs. This will make it a lot easier to design reports where you need to put specific indicators, periods, or orgunits on columns.</para>
          </listitem>
          <listitem>
            <para>Learn from others, there are many DHIS 2 report designs for Jasper  on  launchpad, see http://bazaar.launchpad.net/~DHIS 2-devs-core/DHIS 2/trunk/files/head:/resources/</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
  </section>
  <section>
    <title>Charts</title>
    <para>Charts present analysis of data using indicators and subjecting it to comparisons 
across organisation units and over time.</para>
    <section>
      <title>Creating charts</title>
      <para>To create a chart, navigate to Services -&gt; Reports -&gt; Charts. There are three different kinds of charts you can create: Period, organisation or indicator chart. For each chart you can choose whether you want to have bar charts or line charts.</para>
      <itemizedlist>
        <listitem>
          <para><emphasis>Period chart</emphasis></para>
          <para>The period chart lets you choose several indicators, several periods and one organisation unit.</para>
          <para>The chosen periods are listed on the X-axis, and the values for each selected indicator is shown.</para>
          <para>The period chart supports relative periods. That means that if you don&apos;t select any periods when you create the chart, but rather tick the box &quot;Reporting month&quot; under &quot;Relative periods&quot;, the chart will show the results from previous month each time it is run. For example, if you run the chart in June 2011, the chart will present the values for May 2011.</para>
          <screenshot>
            <screeninfo>Example period charts</screeninfo>
            <mediaobject>
              <imageobject>
                <imagedata width="100%" fileref="resources/images/dhis2_creating_reporting/chart_period.png" format="PNG"/>
              </imageobject>
            </mediaobject>
          </screenshot>
        </listitem>
        <listitem>
          <para><emphasis>Organisation unit chart</emphasis></para>
          <para>The organisation unit chart lets you choose several indicators, several organisation units and one period.</para>
          <para>The organisation units are listed on the X-axis, and the values for each indicator is shown.</para>
          <para>The organisation unit chart does <emphasis>not</emphasis> support relative periods.</para>
          <screenshot>
            <screeninfo>Example organisation unit charts</screeninfo>
            <mediaobject>
              <imageobject>
                <imagedata width="100%" fileref="resources/images/dhis2_creating_reporting/chart_orgunit.png" format="PNG"/>
              </imageobject>
            </mediaobject>
          </screenshot>
        </listitem>
        <listitem>
          <para><emphasis>Indicator chart</emphasis></para>
          <para>The indicator chart is similar to the period chart in all but one area:</para>
          <para>The chosen indicators are listed along the X-axis, and the values for each period is shown.</para>
          <screenshot>
            <screeninfo>Example indicator charts</screeninfo>
            <mediaobject>
              <imageobject>
                <imagedata width="100%" fileref="resources/images/dhis2_creating_reporting/chart_indicator.png" format="PNG"/>
              </imageobject>
            </mediaobject>
          </screenshot>
        </listitem>
      </itemizedlist>
      <section>
        <title>Options when creating charts</title>
        <itemizedlist>
          <listitem>
            <para><emphasis>Include regression line</emphasis></para>
            <para>This option adds a line showing the trend of the indicator(s) presented in the chart</para>
          </listitem>
          <listitem>
            <para><emphasis>Include current user organisation unit</emphasis> (from v. 2.2)</para>
            <para>This option includes the organisation unit the current user is assigned to, in addition to other selected organisation units. For example, if the user is assigned to a region, the chart will show values for this region in addition to other selected organisation units.</para>
            <para><emphasis>Note:</emphasis> If this option is chosen when creating a period chart, another organisation unit should not be chosen, as values for only one organisation unit can be presented in a period chart.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
  </section>
  <section>
    <title>Setting up and maintaining pivot tables</title>
    <para>Pivot tables provide an excellent and dynamic data analysis tool that can be automatically linked to the DHIS 2 data. Each pivot table has a connection to the database and makes use of the pivot source views (sql queries) in the database to fetch the data. These queries pull all their data from the data mart tables so it is important to keep the data mart updated at all times in order to get the most recent data into the pivot tables. A pivot table can connect to a database on the local computer or on a server. This makes it well suitable for use in a local network where there is only one shared database and multiple clients using pivot tables on their own machines. Excel can also connect to databases running on Linux. The database connection used in the pivot tables is specified in odbc data sources on the computers running pivot tables.</para>
    <para>With the use of the resource tables in the database we can easily get all group sets and categories over to Excel as pivot fields, which is a major improvement to the data analysis process. Here is a short how-to:

</para>
    <para/>
    <para><emphasis role="bold">First time setup</emphasis>
</para>
    <para>1) In DHIS 2, Data Administration, Resource Tables, Tick all and generate
</para>
    <para>2) in DHIS 2, export the data you need to the data mart
</para>
    <para>3) In database (e.g. pgAdmin), insert the pivot views (download at DHIS 2.org)
</para>
    <para>4) Add a Windows data source (administrative tools-&gt;data sources) that links to your database (odbc connection). x64 users on Vista and Win7 need to use the 32bit version to be able to access the postgres odbc driver. This version of the data sources program can be found in the XXX folder.
</para>
    <para>5) In Excel use the Pivot table wizard, connect to your dhis database using the odbc connection and do a select * from one of the pivot views
</para>
    <para>6) define the layout of the table (e.g. pick the dimensions you want to see)

</para>
    <para/>
    <para><emphasis role="bold">On data updates</emphasis>
</para>
    <para>1) Export the new data to data mart
</para>
    <para>2) Refresh the pivot tables
 
</para>
    <para/>
    <para><emphasis role="bold">Changes needed after meta data updates (new indicators, new categories, new groups etc.)</emphasis></para>
    <para>1) Drop/delete all the pivot views in your database
</para>
    <para>2) Re-generate all the resource tables
</para>
    <para>3) Put the views back in
</para>
    <para>4) Refresh your pivot table. If you get errors referring to missing fields then you have to go back to the pivot&apos;s query designer and remove the fields that no longer exists, e.g. if a group set or category has been deleted. To get new categories or group sets in to the table you need to select these in the pivot query designer (data source) as well. Changes to category options or groups and group memberships are pulled in automatically on refresh and require no changes to the pivot query (data source).
</para>
    <section>
      <title>Create a Windows data source (ODBC)</title>
      <para>1) Download (http://www.postgresql.org/ftp/odbc/versions/msi/) and install (straight forward) the postgres odbc driver.

</para>
      <para>2) Open Control Panel --&gt; Administrative tools --&gt; Data Source (ODBC).

</para>
      <para>3) In System DNS tab, add a new data source: 
</para>
      <para>Click &apos;Add&apos; button</para>
      <para>Choose &apos;PostgreSQL Unicode&apos;</para>
      <para>Fill information fixed with your system. e.g.:</para>
      <itemizedlist>
        <listitem>
          <para>Data Source: DHIS 2_sl</para>
        </listitem>
        <listitem>
          <para>Description: DHIS 2 data source in PostgreSQL, used for Excel Pivot Tables</para>
        </listitem>
        <listitem>
          <para>Database: DHIS 2_sl
oSSL mode: prefer</para>
        </listitem>
        <listitem>
          <para>Server: localhost (replace with IP address if connecting over a network)</para>
        </listitem>
        <listitem>
          <para>Port: 5432 (this is the default postgres port, change if the postgres server has another port. Same as in hibernate.properties)</para>
        </listitem>
        <listitem>
          <para>Username: dhis  (the user needed to connect to the database, same as in hibernate properties)</para>
        </listitem>
        <listitem>
          <para>Password: dhis (as above)</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Design the pivot table</title>
      <section>
        <title>Office 2003</title>
        <para>1) Open a new blank spreadsheet
</para>
        <para>2) Go to Data --&gt; PivotTable and PivotChartReport.
</para>
        <para>3) External data source --&gt; next --&gt; Get data --&gt; choose the data source name which we made in previous step.
</para>
        <para>4) The first time you do this the first query window you get is quite poor, so click cancel and wait for Microsoft Query to open.
</para>
        <para>5) In the table selector look for the pivot_source view you need and select that.
</para>
        <para>6) Either select columns one by one or simply select all by double-clicking on the * symbol in the table</para>
        <para>
7) When you have the result set you need (you should be able to see the values in the result set table with your selected fields) you select Return to Excel in the Top menu-&gt;File
</para>
        <para>8) Go next and open the layout window
</para>
        <para>9) Drag and drop the necessary fields for your table. Make sure that routine data tables have the datavalue column in the data area
Notice: Later you can modify the field name by right clicking on it and opening &apos;Field settings&apos;, add a title, some notices and so on for a better pivot table.
</para>
        <para>10) Additional step for indicator tables:
</para>
        <para>Your indicator values should be calculated by Excel using the formula &apos;Factor*Numerator/Denominator&apos; sto make sure Excel aggregates the values (such as percentages) properly. This can be done by inserting a calculated field into the Data field area. In the layout window in the wizard just put any field in data field, e.g. denominatorvalue (the wizard does not accept an empty data field). Then close and when you can see the table in normal view select the denominatorvalue field and in the top menu go to Insert-&gt;Calculated field. In the new window you can give your field the name e.g. IndicatorValue and specify the formula based on the available fields in the list to form the formula &apos;numxfactor/denominatorvalue&apos;. numxfactor is a pre-calculated value of the factor x numeratorvalue.
</para>
      </section>
      <section>
        <title>Office 2007</title>
        <para>1) open a new worksheet
</para>
        <para>2) Go to Data menu, then From Other Sources, From Microsoft Query
</para>
        <para>3) Click yes to confirm opening if you get a security warning popup
</para>
        <para>4) In Choose Data Source: select your odbc connection
</para>
        <para>5) In Query Wizard - Choose Columns, click Cancel, and then Yes to continue editing the query in Microsoft Query
</para>
        <para>6) In Add tables, locate the pivot view you need and select it. Go to Options and filter only Views to make it easier to see the Views. When you can see your table/view in the designer, then close the Add table dialogue.
</para>
        <para>7) Double-click on the * in your table to select all the columns, or pick one by one
</para>
        <para>8) When you can see the data in the designer (it may take some time to load), then go to the top menu File-&gt;Return data to Microsoft Office Excel
</para>
        <para>9) In Excel you&apos;ll see the Import Data dialogue, and there you select to view the data in a Pivot Table Report
</para>
        <para>10) You will then see the Pivot table field list on the right side, and there you can drag and drop fields from the top list to the different areas (filter, column, row, data). You will see that the pivot table is updated automatically.
</para>
        <para>11) Rename the pivot fields by right-clicking on a field and open the Field Settings menu.There you can write in a Custom Name, e.g. &apos;District&apos; in stead of Orgunit2.
</para>
        <para>12) Save your file and the next time you have new data in your data mart you can refresh the pivot table to see all the data in your data mart (filtered by your pivot view), both old and new data.
</para>
        <para>13) If you for some reason need to empty your pivot table, e.g. to send to another computer over email, and you cannot send with data (big size), you can first empty/clean the data mart from the DHIS Data Administration window, and then refresh your pivot table.
</para>
        <para>10) Additional step for indicator tables: See instructions for 2003 above.
</para>
      </section>
    </section>
  </section>
</chapter>
