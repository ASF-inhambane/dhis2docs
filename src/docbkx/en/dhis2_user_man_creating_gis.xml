<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" []>
<chapter>
  <title>Setting up GIS</title>
  <section>
    <title>Context</title>
    <para>
      Setting up the GIS simply means storing coordinates for the organisation units you want to show on the map in the database. Coordinates are distributed in shapefiles, which is the most common geospatial vector data format for desktop applications (you might find shapefiles for your country at http://www.diva-gis.org/gdata). The work that needs to be done in order to use these coordinates in DHIS 2 GIS is transfering them and storing them with the corresponding organisation units in the database.
    </para>
    <para>If you go to the organisation unit module and edit one of the units, you can see a textfield called Coordinates. Here you may fill in its coordinates directly (geojson format) which is quite neat if you just want to update a couple of units.</para>
    <para>An example point/facility coordinate:</para>
    <para><programlisting><userinput>[29.341,-11.154]</userinput></programlisting></para>
    <para>An example polygon/area coordinates string:</para>
    <para><programlisting><userinput>[[[[29.343,-11.154],[28.329,-11.342],[28.481,-10.239],[29.833,-10.412]]]]</userinput></programlisting></para>
    <para>However, if you are going to e.g. add coordinates for all units at a certain level you don&apos;t want to do that manually. This is where the automatic GML import comes into play and the following section explains the preferred way of using it.</para>
  </section>
  <section id="gisSetup">
    <title>Importing coordinates</title>
    <para>Step 1 - Simplify/generalize your shapefile</para>
    <para>
      The boundaries in shapefiles are usually very accurate. This does not cause any trouble for hardware accelerated desktop based GIS software, but it might be too heavy for the web based GIS application in DHIS 2. Thus, we need to make the boundary lines less detailed by removing some of the line points. Go to <ulink url="http://mapshaper.com/test/demo.html">http://mapshaper.com/test/demo.html</ulink> and upload your shapefile. Then, at the center bottom you see a slider that starts at 0%. It is usually ok to drag it up to about 80%. In the left menu you can check &quot;show original lines&quot; to compare the result and you may want to give a different simplification method a try. When you are happy with the result, click &quot;export&quot; in the top right corner. Then check the first of the four options called &quot;Shapefile - polygons&quot;, click &quot;create&quot; and wait for the download buttons to appear. Now, download the two files and overwrite the existing .shp and .shx files in your shapefile set (a shapefile is actually a set that has three mandatory files called .shp, .shx and .dbf and sometimes up to 15 files in total). Move on to the next step with your new simplified shapefile.
    </para>
    <para/>
    <para>Step 2 - Convert the shapefile to GML</para>
    <para>
      The recommended tool for geographical format conversions is called &quot;ogr2ogr&quot;. This should be available for most Linux distros (&quot;sudo apt-get install gdal-bin&quot;). For Windows, go to http://fwtools.maptools.org/ and download &quot;FWTools&quot;, install it and open up the FWTools command shell. During the format conversion we also want to ensure that the output has the correct coordinate projection (called EPSG:4326 with geographic longitude and latitude). For a more detailed reference of geographic coordinates, please refer to this <ulink url="http://www.epsg-registry.org/">site</ulink>.  If you have already reprojected the geographic data to the geographic latitude/longitude (EPSG:4326) system, there is no need to explicitly define the output coordinate system, assuming that <command>ogr2ogr</command> can determine the input spatial reference system. You can determine the spatial reference system by executing the following command.</para>
    <para><programlisting><userinput>ogrinfo -al -so filename.shp</userinput></programlisting></para>
    <para>Assuming that the projection is reported to be EPSG:27700 by <command>ogrinfo</command>, we can transform it to EPSG:4326 by executing the following command.<programlisting><userinput> ogr2ogr -s_srs EPSG:27700 -t_srs EPSG:4326 -f GML filename.gml filename.shp </userinput></programlisting></para>
    <para>If the geographic data is already in EPSG:4326, you can simply transform the shapefile to GML by executing the following command. </para>
    <para><programlisting><userinput>ogr2ogr -f GML filename.gml filename.shp</userinput></programlisting></para>
    <para> You will find the created GML file in the same folder as the shapefile.
    </para>
    <para>Step 3 - Prepare the GML file</para>
    <para>
      Unfortunately, the GML file is not ready for importation yet. Open it in a robust text editor like Geany (Linux) or Notepad++ (Windows). GML is an XML based format which means that you will recognize the regular XML tag hierarchy. In the GML file an organisation unit is represented as a &lt;gml:featureMember&gt;. Inside the feature members we usually find a lot of attributes, but we are just going to import their coordinates. In order to do this DHIS 2 will match the name of the feature members to the organisation unit names in the database. To get the name of the feature members in the GML file the importer will look for a property called &quot;ogr:Name&quot;. Figure out what property that is holding the name of the feature members (could be &quot;ogr:DISTRICT_NAME&quot;, &quot;ogr:NAME_1&quot; or whatever, this differs from shapefile to shapefile) and rename it to &quot;ogr:Name&quot;. Ensure that both the start and the end tags are renamed properly. They are supposed to look like e.g.: &lt;ogr:Name&gt;Moyamba District&lt;/ogr:Name&gt;
    </para>
    <para>
      Note that the name of the feature members in the GML file must be spelled exactly the same as the organisation units in the database. Otherwise the importer will not recognize it and thus not transfer any coordinates. E.g. &quot;Moyamba&quot; in the GML file migth be called &quot;Moyamba District&quot; in the database. Creative use of the &quot;rename all&quot; function in the text editor is usually of great help in these situations, as you do not want to edit numerous feature members manually. Have a brief look at the names and compare them to the names in the database. If they seem to match fairly good, it is about time to do a preview in the import-export module.
    </para>
    <para>
      Go to Services -&gt; Import-Export, select &quot;Preview&quot;, select the GML file and click &quot;Import&quot;. Look for new/updated organisation units. Our intention is to add coordinates to already existing organisation units in the database, so we want as many updates as possible and 0 new. Those listed as new will be created as root units and mess up the organisation unit trees in DHIS 2. If any listed as new, click the number and the organisation units in question will appear in the list below. If there are any slight misspellings compared to the organisation unit names in the database - fix them and do the preview again. Otherwise, click the &quot;discard all&quot; button below the list and then the &quot;Import all&quot; button above the list.
    </para>
    <para>
      If the import process completes successfully, you are good to go. If not, check the log for hints and look for common errors such as:    
    </para>
    <para>- Name duplicates in the GML file. The name column in the database is unique and does not accept two organisation units with the same name.</para>
    <para>- The &quot;shortname&quot; column in the organisationunit table in your database has a too small varchar definition. Increase it to 100.</para>
    <para>- Special name characters in the GML file. Rename or remove.</para>
  </section>
  <section>
    <title>Administering the GIS module</title>
    <section id="gisOverlay">
      <title>Register overlays</title>
      <para>Overlays are geographical layers that do not have any direct linkage
    to data in the database. Examples include roads, rivers, airports, ports,
    and other geographical information that you may want to display on your
    map, but that is not necessarily linked to data contained in the DHIS
    database. The <guimenu>Register Overlay</guimenu> panel will allow you to
    add new layers and determine how they will be represented visually on the
    map. </para>
      <itemizedlist>
        <listitem>
          <para><guilabel>Display name: </guilabel>Represents your overlay in
        the layer tree in the upper right corner.</para>
        </listitem>
        <listitem>
          <para><guilabel>Map source file: </guilabel>The GeoJSON file
        name.</para>
        </listitem>
        <listitem>
          <para><guilabel>Fill color: </guilabel>Decides the fill color if the
        layer is a polygon layer. </para>
        </listitem>
        <listitem>
          <para><guilabel>Fill opacity: </guilabel>Select an opacity level
        between 0 (invisible) and 1 (solid).</para>
        </listitem>
        <listitem>
          <para><guilabel>Stroke color: </guilabel>The stroke color over lines
        and polygon borders.</para>
        </listitem>
        <listitem>
          <para><guilabel>Stroke width: </guilabel>Select a stroke width between
        0 and 4.</para>
        </listitem>
      </itemizedlist>
      <section>
        <title>Copying files to the DHIS application</title>
        <para>Currently, your GeoJSON files should be placed in the
      DHIS2_HOME/geojson of your DHIS application to be accessible to the GIS
      module. If the GeoJSON directory does not exist, you will need to create
      it manually and copy your GeoJSON files there.</para>
      </section>
    </section>
  </section>
</chapter>
